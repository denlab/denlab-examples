#!/usr/bin/env bash
set -euo pipefail

LOGFILE=logfile.txt

echo "redirecting stdout to logile" | t.recolor 128 '.*'
exec 6>&1           # Link file descriptor #6 with stdout.
                    # Saves stdout.
exec > $LOGFILE     # stdout replaced with file "logfile.txt".
echo "redirecting stderr to logile" | t.recolor 128 '.*' 1>&2
exec 7>&2           # Link file descriptor #6 with stdout.
# Saves stdout.
exec 2> err.log     # stdout replaced with file "logfile.txt".


# ----------------------------------------------------------- #
# All output from commands in this block sent to file $LOGFILE.

echo line on stdout
echo line on stderr 1>&2
# ----------------------------------------------------------- #

exec 1>&6 6>&-      # Restore stdout and close file descriptor #6.
exec 2>&7 7>&-      # Restore stdout and close file descriptor #6.

echo line on stdout
echo line on stderr 1>&2
echo "== stdout/err now restored to default == " | t.recolor 128 '.*'

echo "== content of log file: == " | t.recolor 128 '.*'
cat $LOGFILE | sed -r 's/.*/logfile> &/'
echo "== content of err file: == " | t.recolor 128 '.*'
cat err.log | sed -r 's/.*/errfile> &/'
